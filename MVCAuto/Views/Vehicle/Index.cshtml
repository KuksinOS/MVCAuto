@*@model IEnumerable<MVCAuto.Models.Vehicle>*@
@model MVCAuto.ModelView.VehicleViews

<style>
    /* Stackoverflow preview fix, please ignore */
    .navbar-nav {
        flex-direction: row;
    }

    .nav-link {
        padding-right: .5rem !important;
        padding-left: .5rem !important;
    }

    /* Fixes dropdown menus placed on the right side */
    .ml-auto .dropdown-menu {
        left: auto !important;
        right: 0px;
    }
</style>

<style>

    .modal-dialog,
    .modal-content {
        /* 80% of window height */
        height: 80%;
    }

    .modal-body {
        /* 100% = dialog height, 120px = header + footer */
        max-height: calc(100% - 120px);
        overflow-y: scroll;
    }
</style>

@{
    ViewBag.Title = "Index";
}

<h2>Справочник автомобилей</h2>

<p>
    @Html.ActionLink("Добавить", "Create")
</p>

<nav class="navbar navbar-expand-lg navbar-dark bg-primary rounded">
    <a class="navbar-brand" href="#">Действия</a>

    <ul class="navbar-nav ml-auto">
        <li class="nav-item">
            <button type="button" class="btn btn-secondary" style="margin-right:5px;" data-toggle="modal" data-target="#GRUDModalCenter" onclick="setcreate()">Добавить</button>

            <script type="text/javascript">

                function setcreate() {
                    $('#IDGRUD').prop('action', "/Vehicle/Create");
                    $('#GRUDModalCenter').modal('toggle');
                }

            </script>

        </li>
        <li class="nav-item">
            @*<button type="button" class="btn btn-secondary" style="margin-right:5px;" data-toggle="modal" data-target="#GRUDModalCenter" onclick="setedit()">Редактировать</button>*@
            <button type="button" class="btn btn-secondary" style="margin-right:5px;" data-toggle="modal" onclick="setedit()">Редактировать</button>
            <script type="text/javascript">

                function setedit() {
                    const idparam = '@(ViewBag.ID)';

                    if (idparam != '') {
                        $('#IDGRUD').prop('action', "/Vehicle/Edit/" + idparam);
                        $('#GRUDModalCenter').modal('toggle');
                    }
                    else
                        alert('Выберите строку!');

                }

            </script>
        </li>
        <li class="nav-item">
            <button type="button" class="btn btn-secondary" onclick="setdelete()">Удалить</button>
            <script type="text/javascript">

                function setdelete() {
                    const idparam = '@(ViewBag.ID)';

                    if (idparam != '') {
                        $('#IDGRUD').prop('action', "/Vehicle/Delete/" + idparam);
                        $("#IDGRUD").submit();
                    }
                    else
                        alert('Выберите строку!');
                }

            </script>
        </li>
    </ul>
</nav>



<table class="table">
    <tr>
        <th>
            Vin
        </th>
        <th>
            Color
        </th>
        <th>
            Price
        </th>
        <th>
            OperDate
        </th>
        <th>
            IntRowVer
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Vehicles)
    {
        string selectedRow = "";
        if (item.ID == ViewBag.ID)
        {
            selectedRow = "bg-secondary";
        }
        <tr class="@selectedRow">
            <td>
                @Html.DisplayFor(modelItem => item.Vin)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ColorVehicle.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OperDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IntRowVer)
            </td>
            <td>
                @Html.ActionLink("Выбрать", "Index", new { id = item.ID }) |
                @Html.ActionLink("Отредактировать", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Детально", "Details", new { id = item.ID }) |
                @Html.ActionLink("Удалить", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>

<!-- Modal -->
@*@using (Html.BeginForm("Create", "Vehicle", FormMethod.Post))*@
@*@using (Html.BeginForm(null, null, FormMethod.Post, new { ID = "IDGRUD", onsubmit = "return process()" }))*@
@using (Html.BeginForm(null, null, FormMethod.Post, new { ID = "IDGRUD", onsubmit = "return onSubmit(event)", novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()
    <div class="modal fade bd-example-modal-lg" id="GRUDModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl" style="max-width: 1350px!important;" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Vehicle</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.SelVehicle.ID)
                    @*добавьте скрытое поле для сохранения RowVersion*@
                    @Html.HiddenFor(model => model.SelVehicle.RowVersion)
                    <div class="form-group">
                        @Html.LabelFor(model => model.SelVehicle.Vin, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SelVehicle.Vin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SelVehicle.Vin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SelVehicle.ColorId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.SelVehicle.ColorId, ViewBag.ColorVehicles as SelectList, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SelVehicle.ColorId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SelVehicle.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SelVehicle.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SelVehicle.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SelVehicle.OperDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SelVehicle.OperDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SelVehicle.OperDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SelVehicle.IntRowVer, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SelVehicle.IntRowVer, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SelVehicle.IntRowVer, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-secondary" value="Save changes" />
                </div>
            </div>

        </div>
    </div>
}

<script type="text/javascript">

    function onSubmit(event) {

       // event.preventDefault();
        if ($('#IDGRUD').valid())
            return true;
        else
            return false;
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}