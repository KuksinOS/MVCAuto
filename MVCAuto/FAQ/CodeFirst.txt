https://metanit.com/sharp/mvc5/12.3.php
https://docs.microsoft.com/uk-ua/ef/ef6/modeling/code-first/migrations/index?redirectedfrom=MSDN
https://docs.microsoft.com/ru-ru/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/migrations-and-deployment-with-the-entity-framework-in-an-asp-net-mvc-application
https://metanit.com/sharp/entityframework/1.2.php
https://docs.microsoft.com/ru-ru/ef/ef6/fundamentals/working-with-dbcontext
https://docs.microsoft.com/ru-ru/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/migrations-and-deployment-with-the-entity-framework-in-an-asp-net-mvc-application
https://docs.microsoft.com/ru-ru/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/creating-an-entity-framework-data-model-for-an-asp-net-mvc-application
https://docs.microsoft.com/ru-ru/ef/ef6/fundamentals/configuring/connection-strings
https://metanit.com/sharp/entityframework/2.2.php
https://metanit.com/sharp/entityframework/1.2.php
DbContext: определяет контекст данных, используемый для взаимодействия с базой данных.
DbModelBuilder: сопоставляет классы на языке C# с сущностями в базе данных.
DbSet/DbSet<TEntity>: представляет набор сущностей, хранящихся в базе данных

The project 'MVCAuto' failed to build. ->
Rebuild
PM>
enable-migrations
Add-Migration "Add_Vehicle_Model_Class"
Update-Database
https://articles.runtings.co.uk/2014/12/solved-aspnet-identity-2-throws.html
https://stackoverflow.com/questions/51526632/entity-framework-migration-alter-table-statement-conflicted-with-foreign-key-c
сначала создаем таблицу-справочник
Add-Migration "Add_ColorVehicle_Model_Class"
in this case you must update the database after creating StoryType and the after adding the StoryTypeId to the class Story
Update-Database

Потом устанавливаем вторичный ключ
Add-Migration "Add_FK_dbo.Vehicles_dbo.ColorVehicles_ColorID"
The ALTER TABLE statement conflicted with the FOREIGN KEY constraint "FK_dbo.Vehicles_dbo.ColorVehicles_ColorID". The conflict occurred in database "aspnet-MVCAuto-20200215125525", table "dbo.ColorVehicles", column 'ColorId'.
Переделаем метод в миграции       
       public override void Up()
        {
            AddColumn("dbo.Vehicles", "ColorID", c => c.Int(nullable: true));
            //вставим данные заглушки в базу данных для удовлетворения ограничений внешнего ключа, и это будет сделано. 
            Sql("INSERT INTO dbo.ColorVehicles (Name) VALUES ('Temp')");
            //При выполнении Department Course Department метода он вставит строки в таблицу и будет связывать существующие строки с новыми строками. Seed Если вы еще не добавили какие-либо курсы в пользовательский интерфейс, вам больше не потребуется "Temp" или значение по умолчанию для Course.DepartmentID столбца. Чтобы позволить кому-либо добавить курсы с помощью приложения, необходимо также обновить Seed код метода, чтобы убедиться, что все Course строки (а не только те, которые были вставлены в предыдущих запусках Seed метода) имеют Допустимые DepartmentID значения, прежде чем удалить значение по умолчанию из столбца и удалить временный отдел.
            // Create  a department for course to point to.
            Sql("UPDATE dbo.Vehicles SET ColorID = CV.ColorID FROM dbo.ColorVehicles CV WHERE Name ='Temp' ");
            //  default value for FK points to department created above.

            CreateIndex("dbo.Vehicles", "ColorID");
            AddForeignKey("dbo.Vehicles", "ColorID", "dbo.ColorVehicles", "ColorId", cascadeDelete: true);
        }
Update-Database

Add-Migration "Rename_ColorID_To_ColorId"

Update-Database